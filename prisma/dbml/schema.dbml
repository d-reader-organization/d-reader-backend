//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Wallet {
  address String [pk]
  label String [not null, default: '']
  avatar String [not null, default: '']
  createdAt DateTime [default: `now()`, not null]
  lastLogin DateTime
  nonce String [unique, not null]
  role Role [not null, default: 'User']
  creator Creator
  comics WalletComic [not null]
  comicIssues WalletComicIssue [not null]
  newsletter Newsletter
  walletCreator WalletCreator [not null]
  mintReceipts CandyMachineReceipt [not null]
  nfts Nft [not null]
}

Table Creator {
  id Int [pk, increment]
  email String [unique, not null]
  name String [unique, not null]
  slug String [unique, not null]
  avatar String [not null, default: '']
  banner String [not null, default: '']
  logo String [not null, default: '']
  description String [not null, default: '']
  flavorText String [not null, default: '']
  website String [not null, default: '']
  createdAt DateTime [default: `now()`, not null]
  deletedAt DateTime
  featuredAt DateTime
  verifiedAt DateTime
  popularizedAt DateTime
  emailConfirmedAt DateTime
  comics Comic [not null]
  wallet Wallet [not null]
  walletAddress String [unique, not null]
  walletCreator WalletCreator [not null]
}

Table Comic {
  name String [unique, not null]
  slug String [pk]
  isMatureAudience Boolean [not null]
  cover String [not null, default: '']
  pfp String [not null, default: '']
  logo String [not null, default: '']
  description String [not null, default: '']
  flavorText String [not null, default: '']
  website String [not null, default: '']
  twitter String [not null, default: '']
  discord String [not null, default: '']
  telegram String [not null, default: '']
  instagram String [not null, default: '']
  tikTok String [not null, default: '']
  youTube String [not null, default: '']
  updatedAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
  deletedAt DateTime
  featuredAt DateTime
  verifiedAt DateTime
  publishedAt DateTime
  popularizedAt DateTime
  completedAt DateTime
  genres Genre [not null]
  issues ComicIssue [not null]
  wallets WalletComic [not null]
  creator Creator [not null]
  creatorId Int [not null]
}

Table WalletComic {
  comic Comic [not null]
  comicSlug String [not null]
  wallet Wallet [not null]
  walletAddress String [not null]
  rating Int
  isSubscribed Boolean [not null, default: false]
  isFavourite Boolean [not null, default: false]
  isWhitelisted Boolean [not null, default: false]
  viewedAt DateTime

  indexes {
    (comicSlug, walletAddress) [pk]
  }
}

Table Genre {
  name String [unique, not null]
  slug String [pk]
  icon String [not null, default: '']
  priority Int [not null]
  color String [not null]
  deletedAt DateTime
  comics Comic [not null]
}

Table ComicIssue {
  id Int [pk, increment]
  number Int [not null]
  supply Int [not null]
  discountMintPrice Float [not null]
  mintPrice Float [not null]
  title String [not null]
  slug String [not null]
  description String [not null, default: '']
  flavorText String [not null, default: '']
  cover String [not null, default: '']
  soundtrack String [not null, default: '']
  releaseDate DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
  deletedAt DateTime
  featuredAt DateTime
  verifiedAt DateTime
  publishedAt DateTime
  popularizedAt DateTime
  comic Comic [not null]
  comicSlug String [not null]
  collectionNft CollectionNft
  pages ComicPage [not null]
  wallets WalletComicIssue [not null]

  indexes {
    (number, comicSlug) [unique]
    (slug, comicSlug) [unique]
    (title, comicSlug) [unique]
  }
}

Table Nft {
  address String [pk]
  uri String [not null]
  name String [not null]
  owner Wallet [not null]
  ownerAddress String [not null]
  candyMachine CandyMachine [not null]
  candyMachineAddress String [not null]
  collectionNft CollectionNft [not null]
  collectionNftAddress String [not null]
  collectionUri String [not null]
  receipt CandyMachineReceipt
  metadata Metadata [not null]
}

Table CandyMachine {
  address String [pk]
  mintAuthorityAddress String [not null]
  itemsAvailable Int [not null]
  itemsMinted Int [not null]
  itemsRemaining Int [not null]
  itemsLoaded Int [not null]
  isFullyLoaded Boolean [not null]
  endsAt DateTime
  baseMintPrice Float [not null]
  collectionNft CollectionNft [not null]
  collectionNftAddress String [not null]
  items Nft [not null]
  receipts CandyMachineReceipt [not null]
}

Table CandyMachineReceipt {
  nftAddress String [pk]
  nft Nft [not null]
  buyer Wallet [not null]
  buyerAddress String [not null]
  price Float [not null]
  timestamp DateTime [not null]
  description String [not null]
  candyMachine CandyMachine [not null]
  candyMachineAddress String [not null]
}

Table CollectionNft {
  address String [pk]
  uri String [not null]
  name String [not null]
  comicIssue ComicIssue [not null]
  comicIssueId Int [unique, not null]
  collectionItems Nft [not null]
  candyMachines CandyMachine [not null]
}

Table ComicPage {
  id Int [pk, increment]
  pageNumber Int [increment, not null]
  isPreviewable Boolean [not null, default: false]
  image String [not null]
  comicIssue ComicIssue [not null]
  comicIssueId Int [not null]

  indexes {
    (pageNumber, comicIssueId) [unique]
  }
}

Table CarouselSlide {
  id Int [pk, increment]
  image String [not null]
  title String [not null, default: '']
  subtitle String [not null, default: '']
  priority Int [not null]
  link String [not null]
  publishedAt DateTime [default: `now()`, not null]
  expiredAt DateTime [not null]
  location CarouselLocation [not null, default: 'Home']
}

Table Newsletter {
  wallet Wallet [not null]
  walletAddress String [pk]
  email String [unique, not null]
  subscribedAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  wantsDevelopmentProgressNews Boolean [not null]
  wantsPlatformContentNews Boolean [not null]
  wantsFreeNFTs Boolean [not null]
  ip String [not null, default: '']
  country String [not null, default: '']
  city String [not null, default: '']
  browser String [not null, default: '']
  device String [not null, default: '']
  os String [not null, default: '']
}

Table WalletComicIssue {
  comicIssue ComicIssue [not null]
  comicIssueId Int [not null]
  wallet Wallet [not null]
  walletAddress String [not null]
  rating Int
  isSubscribed Boolean [not null, default: false]
  isFavourite Boolean [not null, default: false]
  isWhitelisted Boolean [not null, default: false]
  viewedAt DateTime
  readAt DateTime

  indexes {
    (comicIssueId, walletAddress) [pk]
  }
}

Table WalletCreator {
  creator Creator [not null]
  creatorSlug String [not null]
  wallet Wallet [not null]
  walletAddress String [not null]
  isFollowing Boolean [not null, default: false]

  indexes {
    (creatorSlug, walletAddress) [pk]
  }
}

Table Metadata {
  collectionUri String [pk]
  nft Nft [not null]
  listing Listing [not null]
  collectionName String [not null]
  isSigned Boolean
  isMint Boolean
}

Table Listing {
  id Int [pk, increment]
  collectionUri String [not null]
  metadata Metadata [not null]
  nftAddress String [not null]
  name String [not null]
  sellerAddress String [not null]
  price Int [not null]
  feePayer String [not null]
  signature String [not null]
  symbol String [not null]
  createdAt DateTime [not null]
  canceledAt DateTime

  indexes {
    (nftAddress, canceledAt) [unique]
  }
}

Enum Role {
  Superadmin
  Admin
  User
}

Enum CarouselLocation {
  Home
}

Ref: Creator.walletAddress - Wallet.address [delete: Cascade]

Ref: Comic.creatorId > Creator.id [delete: Cascade]

Ref: WalletComic.comicSlug > Comic.slug [delete: Cascade]

Ref: WalletComic.walletAddress > Wallet.address [delete: Cascade]

Ref: ComicIssue.comicSlug > Comic.slug [delete: Cascade]

Ref: Nft.ownerAddress > Wallet.address

Ref: Nft.candyMachineAddress > CandyMachine.address

Ref: Nft.collectionNftAddress > CollectionNft.address

Ref: Nft.collectionUri > Metadata.collectionUri

Ref: CandyMachine.collectionNftAddress > CollectionNft.address

Ref: CandyMachineReceipt.nftAddress - Nft.address

Ref: CandyMachineReceipt.buyerAddress > Wallet.address

Ref: CandyMachineReceipt.candyMachineAddress > CandyMachine.address [delete: Cascade]

Ref: CollectionNft.comicIssueId - ComicIssue.id

Ref: ComicPage.comicIssueId > ComicIssue.id [delete: Cascade]

Ref: Newsletter.walletAddress - Wallet.address [delete: Cascade]

Ref: WalletComicIssue.comicIssueId > ComicIssue.id [delete: Cascade]

Ref: WalletComicIssue.walletAddress > Wallet.address [delete: Cascade]

Ref: WalletCreator.creatorSlug > Creator.slug [delete: Cascade]

Ref: WalletCreator.walletAddress > Wallet.address [delete: Cascade]

Ref: Listing.collectionUri > Metadata.collectionUri