service: d-reader-backend
image: d-reader-organization/d-reader-backend

registry:
  server: ghcr.io
  username: d-reader-josip
  password:
    - MRSK_REGISTRY_PASSWORD

builder:
  multiarch: false

env:
  clear:
    PORT: 3005
  secret:
    - DATABASE_URL
    # Mail
    - MAIL_SERVICE
    - MAIL_AUTH_TYPE
    - MAIL_CLIENT_ID
    - MAIL_CLIENT_SECRET
    - MAIL_REFRESH_TOKEN
    - MAIL_USER
    - MAIL_FROM
    # Security
    - JWT_ACCESS_SECRET
    - JWT_REFRESH_SECRET
    # AWS S3
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_BUCKET_NAME
    - AWS_BUCKET_REGION
    # Cloudflare
    - WORKER_API_KEY
    # Solana
    - TREASURY_PRIVATE_KEY
    - TREASURY_SECRET
    - THIRD_PARTY_SIGNER_SECRET
    - THIRD_PARTY_SIGNER_PRIVATE_KEY
    - SIGN_MESSAGE
    - AUTHORIZATION_SIGNER_PRIVATE_KEY
    - AUTHORIZATION_SIGNER_SECRET
    # Helius
    - HELIUS_API_KEY
    - WEBHOOK_ID
    # Darkblock
    - DARKBLOCK_API_KEY
    # Tensor
    - TENSOR_API_KEY
    # Discord
    - DISCORD_WEBHOOK_URL
    - DISCORD_BOT_TOKEN
    - DISCORD_GUILD_ID
    - DISCORD_VERIFIED_CREATOR_ROLE_ID
    # Firebase
    - FIREBASE_PRIVATE_KEY
    - FIREBASE_CLIENT_EMAIL
    - FIREBASE_PROJECT_ID
    # Google oauth
    - GOOGLE_AUTH_CLIENT_ID
    - GOOGLE_AUTH_CLIENT_SECRET

accessories:
  node-exporter:
    image: prom/node-exporter:latest
    roles:
      - web
    cmd: |
      --path.procfs=/host/proc \
      --path.sysfs=/host/sys \
      --path.rootfs=/rootfs \
      --collector.filesystem.mount-points-exclude="^/(sys|proc|dev|host|etc)($$|/)" \
      --collector.processes
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    port: 9100

  promtail:
    image: grafana/promtail:latest
    roles:
      - web
    cmd: |
      -config.file=/etc/promtail/config.yml \
      -config.expand-env=true
    env:
      clear:
        LOKI_HOST: loki.dreader.io
        LOKI_USERNAME: admin
      secret:
        - LOKI_PASSWORD
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    files:
      - ./config/promtail.yml:/etc/promtail/config.yml

traefik:
  args:
    accesslog: true
    accesslog.format: json
    accesslog.fields.headers.defaultmode: keep
    accesslog.fields.headers.names.Authorization: drop
    accesslog.fields.headers.names.Cookie: drop
    metrics.prometheus: true
    api.dashboard: true
  options:
    publish:
      - 8080:8080
  labels:
    traefik.http.routers.dashboard.entrypoints: traefik
    traefik.http.routers.dashboard.rule: PathPrefix(`/api`, `/dashboard`)
    traefik.http.routers.dashboard.service: api@internal
    traefik.http.routers.dashboard.middlewares: traefik-auth
    traefik.http.middlewares.traefik-auth.basicauth.users: admin:$apr1$MmIhxigx$PFHwq/Sm1an1Bzosw1sIL1
    # command to generate new password: htpasswd -n admin

healthcheck:
  path: /app/healthcheck
  port: 3005
  max_attempts: 10
  interval: 10s

audit_broadcast_cmd: config/scripts/mrsk-audit-broadcast.sh
